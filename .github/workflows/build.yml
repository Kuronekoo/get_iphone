name: Build Windows Executable

on:
  push:
    branches:
      - main  # 替换为你的实际分支名称
  pull_request:
    branches:
      - main  # 替换为你的实际分支名称
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: 检出代码
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # 确保检出所有历史记录以获取标签

    # Step 2: 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    # Step 3: 安装依赖
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    # Step 4: 打包为 .exe 文件
    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --noconsole get_iphone_v2.py

    # Step 5: 验证 dist 目录
    - name: Verify dist directory
      shell: pwsh
      run: |
        $distPath = "${{ github.workspace }}\dist"
        if (-Not (Test-Path $distPath)) {
          Write-Host "Error: dist directory does not exist!"
          exit 1
        }
        $files = Get-ChildItem -Path $distPath
        if ($files.Count -eq 0) {
          Write-Host "Error: dist directory is empty!"
          exit 1
        }
        Write-Host "Dist directory contents:"
        Get-ChildItem -Path $distPath | ForEach-Object { Write-Host $_.Name }

    # Step 6: 自动生成标签
    - name: Create Git Tag
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git tag -a v1.0.$GITHUB_RUN_NUMBER -m "Release version v1.0.$GITHUB_RUN_NUMBER"
        git push origin --tags

    # Step 7: 创建 Release 并上传文件
    - name: Create Release and upload artifact
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.$GITHUB_RUN_NUMBER
        files: dist/*.exe
